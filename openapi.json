{
  "openapi": "3.0.0",
  "paths": {
    "/v1/assets/{idOrSlug}": {
      "get": {
        "operationId": "AssetController_get_v1",
        "parameters": [
          {
            "name": "idOrSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "addresses",
                  "chains",
                  "addresses.chain",
                  "is_favorite",
                  "markets",
                  "market_cap",
                  "ohlcv_last_24_h",
                  "price",
                  "reference",
                  "sector",
                  "supply"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "assets"
        ],
        "summary": "Get Asset",
        "description": "Get a single asset by `idOrSlug`. Use `expand` to include related fields such as `addresses`, `chains`, `price`, `market_cap`, and `supply`."
      }
    },
    "/v1/assets": {
      "get": {
        "operationId": "AssetController_list_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 2147483647,
              "default": 1,
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 1000,
              "default": 100,
              "type": "integer"
            }
          },
          {
            "name": "code",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 20,
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 100,
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "is_supported",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "type": "boolean"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 255,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids_or_codes",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 255,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "favorites",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "expand",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "addresses",
                  "chains",
                  "addresses.chain",
                  "is_favorite",
                  "markets",
                  "market_cap",
                  "ohlcv_last_24_h",
                  "price",
                  "reference",
                  "sector",
                  "supply"
                ]
              }
            }
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 65535,
              "format": "json",
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "code",
                "slug",
                "market_cap.rank",
                "market_cap.percent_change_usd_1_h",
                "market_cap.percent_change_usd_24_h",
                "market_cap.usd",
                "markets.volume_24_h",
                "price.usd",
                "sector.title",
                "supply.total"
              ],
              "type": "string"
            }
          },
          {
            "name": "order_dir",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetPageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "assets"
        ],
        "summary": "List Assets",
        "description": "List assets with pagination and optional filters (`code`, `slug`, `category`, etc.). Use `expand` to include related fields (e.g., `price`, `markets`, `supply`)."
      }
    },
    "/v1/glossary/{idOrSlug}": {
      "get": {
        "operationId": "GlossaryController_get_v1",
        "parameters": [
          {
            "name": "idOrSlug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlossaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "glossary"
        ],
        "summary": "Get Glossary Term",
        "description": "Retrieve a single glossary term by `idOrSlug`."
      }
    },
    "/v1/glossary": {
      "get": {
        "operationId": "GlossaryController_list_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 2147483647,
              "default": 1,
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 1000,
              "default": 1000,
              "type": "integer"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "maximum": 4294967295,
                "minimum": 0
              }
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 255,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "schema": {
              "default": "slug",
              "enum": [
                "slug"
              ],
              "type": "string"
            }
          },
          {
            "name": "order_dir",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlossaryPageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "glossary"
        ],
        "summary": "List Glossary Terms",
        "description": "List glossary terms with pagination and optional filters."
      }
    },
    "/v1/market-stats/{id}": {
      "get": {
        "operationId": "MarketStatsController_get_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "market-stats"
        ],
        "summary": "List Market Stats",
        "description": "Returns a paginated list of Blockworks’ computed market-level statistics. Use this endpoint to discover available stats and build market overviews and dashboards. Each item includes a stat key, value, effective time window, and metadata."
      }
    },
    "/v1/market-stats": {
      "get": {
        "operationId": "MarketStatsController_list_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 2147483647,
              "default": 1,
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 100,
              "type": "integer"
            }
          },
          {
            "name": "group_by",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "day"
              ],
              "type": "string"
            }
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 65535,
              "format": "json",
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "required": false,
            "in": "query",
            "schema": {
              "default": "id",
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "name": "order_dir",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketStatsPageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "market-stats"
        ],
        "summary": "Get Market Stat",
        "description": "Retrieves a single market-level statistic by ID, including its value, effective time window, and metadata. Use with the list endpoint for discovery or to fetch the latest value for a specific stat."
      }
    },
    "/v1/metrics/{identifier}": {
      "get": {
        "operationId": "MetricController_getResults_v1",
        "parameters": [
          {
            "name": "identifier",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "required": true,
            "in": "query",
            "schema": {
              "minItems": 1,
              "example": "Bitcoin,Ethereum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "key is project name",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "Bitcoin": {
                    "date": "2000-12-31",
                    "value": 1
                  },
                  "Ethereum": {
                    "date": "2000-12-31",
                    "value": 2
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ],
        "summary": "Get Metric By Identifier",
        "description": "Retrieve a metric time series by `identifier`. Required query: `project` (comma-separated to request multiple). Optional: `start_date`, `end_date` (YYYY-MM-DD). Returns a time series per project key."
      }
    },
    "/v1/metrics": {
      "get": {
        "operationId": "MetricController_list_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 2147483647,
              "default": 1,
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 100,
              "type": "integer"
            }
          },
          {
            "name": "project",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 255,
              "example": "Bitcoin,Ethereum",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "identifier",
            "required": false,
            "in": "query",
            "schema": {
              "maxLength": 255,
              "example": "txns,issuance",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricPageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ],
        "summary": "List Metrics",
        "description": "List available metrics with optional filters `project` and `identifier`. Supports pagination via `page` and `limit`."
      }
    },
    "/v1/metrics/address-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_address_total",
        "summary": "Address-Total",
        "description": "Retrieve the 'address-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/adress-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_adress_total",
        "summary": "Adress-Total",
        "description": "Retrieve the 'adress-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "Ethereum": [
                    {
                      "date": "2025-08-06",
                      "value": 948090.6294
                    },
                    {
                      "date": "2025-08-07",
                      "value": 1175055.4507
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/burn": {
      "get": {
        "operationId": "MetricController_getResults_v1_burn",
        "summary": "Burn",
        "description": "Retrieve the 'burn' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/burn-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_burn_usd",
        "summary": "Burn-Usd",
        "description": "Retrieve the 'burn-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/dex-spot-volume": {
      "get": {
        "operationId": "MetricController_getResults_v1_dex_spot_volume",
        "summary": "Dex-Spot-Volume",
        "description": "Retrieve the 'dex-spot-volume' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fee-average": {
      "get": {
        "operationId": "MetricController_getResults_v1_fee_average",
        "summary": "Fee-Average",
        "description": "Retrieve the 'fee-average' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fee-average-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_fee_average_usd",
        "summary": "Fee-Average-Usd",
        "description": "Retrieve the 'fee-average-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fee-median": {
      "get": {
        "operationId": "MetricController_getResults_v1_fee_median",
        "summary": "Fee-Median",
        "description": "Retrieve the 'fee-median' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fee-median-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_fee_median_usd",
        "summary": "Fee-Median-Usd",
        "description": "Retrieve the 'fee-median-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-base": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_base",
        "summary": "Fees-Base",
        "description": "Retrieve the 'fees-base' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-base-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_base_usd",
        "summary": "Fees-Base-Usd",
        "description": "Retrieve the 'fees-base-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-mev-tips": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_mev_tips",
        "summary": "Fees-Mev-Tips",
        "description": "Retrieve the 'fees-mev-tips' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-mev-tips-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_mev_tips_usd",
        "summary": "Fees-Mev-Tips-Usd",
        "description": "Retrieve the 'fees-mev-tips-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-other": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_other",
        "summary": "Fees-Other",
        "description": "Retrieve the 'fees-other' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-other-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_other_usd",
        "summary": "Fees-Other-Usd",
        "description": "Retrieve the 'fees-other-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-priority": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_priority",
        "summary": "Fees-Priority",
        "description": "Retrieve the 'fees-priority' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-priority-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_priority_usd",
        "summary": "Fees-Priority-Usd",
        "description": "Retrieve the 'fees-priority-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-transaction": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_transaction",
        "summary": "Fees-Transaction",
        "description": "Retrieve the 'fees-transaction' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/fees-transaction-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_fees_transaction_usd",
        "summary": "Fees-Transaction-Usd",
        "description": "Retrieve the 'fees-transaction-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/issuance": {
      "get": {
        "operationId": "MetricController_getResults_v1_issuance",
        "summary": "Issuance",
        "description": "Retrieve the 'issuance' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/issuance-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_issuance_usd",
        "summary": "Issuance-Usd",
        "description": "Retrieve the 'issuance-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/native-token-fdv": {
      "get": {
        "operationId": "MetricController_getResults_v1_native_token_fdv",
        "summary": "Native-Token-Fdv",
        "description": "Retrieve the 'native-token-fdv' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/native-token-price": {
      "get": {
        "operationId": "MetricController_getResults_v1_native_token_price",
        "summary": "Native-Token-Price",
        "description": "Retrieve the 'native-token-price' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/native-token-supply": {
      "get": {
        "operationId": "MetricController_getResults_v1_native_token_supply",
        "summary": "Native-Token-Supply",
        "description": "Retrieve the 'native-token-supply' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/rev": {
      "get": {
        "operationId": "MetricController_getResults_v1_rev",
        "summary": "Rev",
        "description": "Retrieve the 'rev' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/rev-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_rev_usd",
        "summary": "Rev-Usd",
        "description": "Retrieve the 'rev-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/stablecoin-circulating-supply": {
      "get": {
        "operationId": "MetricController_getResults_v1_stablecoin_circulating_supply",
        "summary": "Stablecoin-Circulating-Supply",
        "description": "Retrieve the 'stablecoin-circulating-supply' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/stablecoin-supply": {
      "get": {
        "operationId": "MetricController_getResults_v1_stablecoin_supply",
        "summary": "Stablecoin-Supply",
        "description": "Retrieve the 'stablecoin-supply' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/transaction-fail": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fail",
        "summary": "Transaction-Fail",
        "description": "Retrieve the 'transaction-fail' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/transaction-success": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_success",
        "summary": "Transaction-Success",
        "description": "Retrieve the 'transaction-success' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/transaction-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_total",
        "summary": "Transaction-Total",
        "description": "Retrieve the 'transaction-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "tags": [
          "metrics"
        ]
      }
    },
    "/v1/metrics/treasury-crypto-asset": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_crypto_asset",
        "summary": "Treasury Crypto Asset",
        "description": "Retrieve the 'treasury-crypto-asset' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "GAME",
                "HYPD",
                "MSTR",
                "SBET",
                "SMLR",
                "SQNS",
                "STKE",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STKE": {
                "value": "STKE",
                "summary": "STKE"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": {
                    "value": "BTC"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-token-holdings": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_token_holdings",
        "summary": "Treasury Token Holdings",
        "description": "Retrieve the 'treasury-token-holdings' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "GAME",
                "HYPD",
                "MSTR",
                "SBET",
                "SMLR",
                "SQNS",
                "STKE",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STKE": {
                "value": "STKE",
                "summary": "STKE"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/market-cap": {
      "get": {
        "operationId": "MetricController_getResults_v1_market_cap",
        "summary": "Market Cap",
        "description": "Retrieve the 'market-cap' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "GAME",
                "HYPD",
                "MSTR",
                "SBET",
                "SMLR",
                "SQNS",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-volume-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_volume_usd",
        "summary": "Treasury Volume Usd",
        "description": "Retrieve the 'treasury-volume-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "GAME",
                "HYPD",
                "MSTR",
                "SBET",
                "SMLR",
                "SQNS",
                "STKE",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STKE": {
                "value": "STKE",
                "summary": "STKE"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/enterprise-value-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_enterprise_value_usd",
        "summary": "Enterprise Value Usd",
        "description": "Retrieve the 'enterprise-value-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "GAME",
                "HYPD",
                "MSTR",
                "SBET",
                "SMLR",
                "SQNS",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-nav-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_nav_usd",
        "summary": "Treasury Nav Usd",
        "description": "Retrieve the 'treasury-nav-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "GAME",
                "HYPD",
                "MSTR",
                "SBET",
                "SMLR",
                "SQNS",
                "STKE",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STKE": {
                "value": "STKE",
                "summary": "STKE"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-mnav": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_mnav",
        "summary": "Treasury Mnav",
        "description": "Retrieve the 'treasury-mnav' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCM",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "FGNX",
                "GAME",
                "HYPD",
                "MSTR",
                "NAKA",
                "SBET",
                "SMLR",
                "SQNS",
                "STSS",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCM": {
                "value": "BTCM",
                "summary": "BTCM"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "FGNX": {
                "value": "FGNX",
                "summary": "FGNX"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "NAKA": {
                "value": "NAKA",
                "summary": "NAKA"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STSS": {
                "value": "STSS",
                "summary": "STSS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ibit": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ibit",
        "summary": "Etf Flows Ibit",
        "description": "Retrieve the 'etf-flows-ibit' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-fbtc": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_fbtc",
        "summary": "Etf Flows Fbtc",
        "description": "Retrieve the 'etf-flows-fbtc' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-bitb": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_bitb",
        "summary": "Etf Flows Bitb",
        "description": "Retrieve the 'etf-flows-bitb' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-arkb": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_arkb",
        "summary": "Etf Flows Arkb",
        "description": "Retrieve the 'etf-flows-arkb' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-btco": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_btco",
        "summary": "Etf Flows Btco",
        "description": "Retrieve the 'etf-flows-btco' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ezbc": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ezbc",
        "summary": "Etf Flows Ezbc",
        "description": "Retrieve the 'etf-flows-ezbc' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-brrr": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_brrr",
        "summary": "Etf Flows Brrr",
        "description": "Retrieve the 'etf-flows-brrr' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-hodl": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_hodl",
        "summary": "Etf Flows Hodl",
        "description": "Retrieve the 'etf-flows-hodl' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-btcw": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_btcw",
        "summary": "Etf Flows Btcw",
        "description": "Retrieve the 'etf-flows-btcw' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-gbtc": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_gbtc",
        "summary": "Etf Flows Gbtc",
        "description": "Retrieve the 'etf-flows-gbtc' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-btc": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_btc",
        "summary": "Etf Flows Btc",
        "description": "Retrieve the 'etf-flows-btc' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_total",
        "summary": "Etf Flows Total",
        "description": "Retrieve the 'etf-flows-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin",
                "ethereum",
                "solana"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "bitcoin,ethereum",
                "summary": "Bitcoin + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-etha": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_etha",
        "summary": "Etf Flows Etha",
        "description": "Retrieve the 'etf-flows-etha' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-feth": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_feth",
        "summary": "Etf Flows Feth",
        "description": "Retrieve the 'etf-flows-feth' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ethw": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ethw",
        "summary": "Etf Flows Ethw",
        "description": "Retrieve the 'etf-flows-ethw' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ceth": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ceth",
        "summary": "Etf Flows Ceth",
        "description": "Retrieve the 'etf-flows-ceth' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ethv": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ethv",
        "summary": "Etf Flows Ethv",
        "description": "Retrieve the 'etf-flows-ethv' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-qeth": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_qeth",
        "summary": "Etf Flows Qeth",
        "description": "Retrieve the 'etf-flows-qeth' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ezet": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ezet",
        "summary": "Etf Flows Ezet",
        "description": "Retrieve the 'etf-flows-ezet' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ethe": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ethe",
        "summary": "Etf Flows Ethe",
        "description": "Retrieve the 'etf-flows-ethe' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-eth": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_eth",
        "summary": "Etf Flows Eth",
        "description": "Retrieve the 'etf-flows-eth' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-ssk": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_ssk",
        "summary": "Etf Flows Ssk",
        "description": "Retrieve the 'etf-flows-ssk' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "solana"
              ],
              "example": "solana"
            },
            "examples": {
              "solana": {
                "value": "solana",
                "summary": "Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/volume-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_volume_usd",
        "summary": "Volume Usd",
        "description": "Retrieve the 'volume-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ZeroFi",
                "byreal",
                "goonfi",
                "humidifi",
                "lifinity",
                "meteroa",
                "orca",
                "pumpfun",
                "raydium",
                "solfi",
                "stabble",
                "tessera"
              ],
              "example": "ZeroFi"
            },
            "examples": {
              "ZeroFi": {
                "value": "ZeroFi",
                "summary": "ZeroFi"
              },
              "byreal": {
                "value": "byreal",
                "summary": "Byreal"
              },
              "goonfi": {
                "value": "goonfi",
                "summary": "Goonfi"
              },
              "humidifi": {
                "value": "humidifi",
                "summary": "Humidifi"
              },
              "lifinity": {
                "value": "lifinity",
                "summary": "Lifinity"
              },
              "meteroa": {
                "value": "meteroa",
                "summary": "Meteroa"
              },
              "orca": {
                "value": "orca",
                "summary": "Orca"
              },
              "pumpfun": {
                "value": "pumpfun",
                "summary": "Pumpfun"
              },
              "raydium": {
                "value": "raydium",
                "summary": "Raydium"
              },
              "solfi": {
                "value": "solfi",
                "summary": "Solfi"
              },
              "stabble": {
                "value": "stabble",
                "summary": "Stabble"
              },
              "tessera": {
                "value": "tessera",
                "summary": "Tessera"
              },
              "multi": {
                "value": "ZeroFi,byreal",
                "summary": "ZeroFi + Byreal"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/gross-profit-l2": {
      "get": {
        "operationId": "MetricController_getResults_v1_gross_profit_l2",
        "summary": "Gross Profit L2",
        "description": "Retrieve the 'gross-profit-l2' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transactions-failed": {
      "get": {
        "operationId": "MetricController_getResults_v1_transactions_failed",
        "summary": "Transactions Failed",
        "description": "Retrieve the 'transactions-failed' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/costs-l2": {
      "get": {
        "operationId": "MetricController_getResults_v1_costs_l2",
        "summary": "Costs L2",
        "description": "Retrieve the 'costs-l2' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/active-addresses": {
      "get": {
        "operationId": "MetricController_getResults_v1_active_addresses",
        "summary": "Active Addresses",
        "description": "Retrieve the 'active-addresses' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows",
        "summary": "Etf Flows",
        "description": "Retrieve the 'etf-flows' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ARKB",
                "BITB",
                "BRRR",
                "BTC",
                "BTCO",
                "BTCW",
                "CETH",
                "ETH",
                "ETHA",
                "ETHE",
                "ETHV",
                "ETHW",
                "EZBC",
                "EZET",
                "FBTC",
                "FETH",
                "GBTC",
                "HODL",
                "IBIT",
                "QETH",
                "SSK"
              ],
              "example": "ARKB"
            },
            "examples": {
              "ARKB": {
                "value": "ARKB",
                "summary": "ARKB"
              },
              "BITB": {
                "value": "BITB",
                "summary": "BITB"
              },
              "BRRR": {
                "value": "BRRR",
                "summary": "BRRR"
              },
              "BTC": {
                "value": "BTC",
                "summary": "BTC"
              },
              "BTCO": {
                "value": "BTCO",
                "summary": "BTCO"
              },
              "BTCW": {
                "value": "BTCW",
                "summary": "BTCW"
              },
              "CETH": {
                "value": "CETH",
                "summary": "CETH"
              },
              "ETH": {
                "value": "ETH",
                "summary": "ETH"
              },
              "ETHA": {
                "value": "ETHA",
                "summary": "ETHA"
              },
              "ETHE": {
                "value": "ETHE",
                "summary": "ETHE"
              },
              "ETHV": {
                "value": "ETHV",
                "summary": "ETHV"
              },
              "ETHW": {
                "value": "ETHW",
                "summary": "ETHW"
              },
              "EZBC": {
                "value": "EZBC",
                "summary": "EZBC"
              },
              "EZET": {
                "value": "EZET",
                "summary": "EZET"
              },
              "FBTC": {
                "value": "FBTC",
                "summary": "FBTC"
              },
              "FETH": {
                "value": "FETH",
                "summary": "FETH"
              },
              "GBTC": {
                "value": "GBTC",
                "summary": "GBTC"
              },
              "HODL": {
                "value": "HODL",
                "summary": "HODL"
              },
              "IBIT": {
                "value": "IBIT",
                "summary": "IBIT"
              },
              "QETH": {
                "value": "QETH",
                "summary": "QETH"
              },
              "SSK": {
                "value": "SSK",
                "summary": "SSK"
              },
              "multi": {
                "value": "ARKB,BITB",
                "summary": "ARKB + BITB"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/price": {
      "get": {
        "operationId": "MetricController_getResults_v1_price",
        "summary": "Price",
        "description": "Retrieve the 'price' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/base-fees-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_base_fees_usd",
        "summary": "Base Fees Usd",
        "description": "Retrieve the 'base-fees-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/mev-tips-fees": {
      "get": {
        "operationId": "MetricController_getResults_v1_mev_tips_fees",
        "summary": "Mev Tips Fees",
        "description": "Retrieve the 'mev-tips-fees' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/priority-fees-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_priority_fees_usd",
        "summary": "Priority Fees Usd",
        "description": "Retrieve the 'priority-fees-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transactions-succeeded": {
      "get": {
        "operationId": "MetricController_getResults_v1_transactions_succeeded",
        "summary": "Transactions Succeeded",
        "description": "Retrieve the 'transactions-succeeded' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/base-fees": {
      "get": {
        "operationId": "MetricController_getResults_v1_base_fees",
        "summary": "Base Fees",
        "description": "Retrieve the 'base-fees' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fees-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fees_usd",
        "summary": "Transaction Fees Usd",
        "description": "Retrieve the 'transaction-fees-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/other-fees-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_other_fees_usd",
        "summary": "Other Fees Usd",
        "description": "Retrieve the 'other-fees-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fees": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fees",
        "summary": "Transaction Fees",
        "description": "Retrieve the 'transaction-fees' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/priority-fees": {
      "get": {
        "operationId": "MetricController_getResults_v1_priority_fees",
        "summary": "Priority Fees",
        "description": "Retrieve the 'priority-fees' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/other-fees": {
      "get": {
        "operationId": "MetricController_getResults_v1_other_fees",
        "summary": "Other Fees",
        "description": "Retrieve the 'other-fees' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transactions-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_transactions_total",
        "summary": "Transactions Total",
        "description": "Retrieve the 'transactions-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/mev-tips-fees-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_mev_tips_fees_usd",
        "summary": "Mev Tips Fees Usd",
        "description": "Retrieve the 'mev-tips-fees-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/app-revenue-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_app_revenue_total",
        "summary": "App Revenue Total",
        "description": "Retrieve the 'app-revenue-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/revenue": {
      "get": {
        "operationId": "MetricController_getResults_v1_revenue",
        "summary": "Revenue",
        "description": "Retrieve the 'revenue' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "aave",
                "aerodrome",
                "apex",
                "aries",
                "aster",
                "axiom",
                "balancer",
                "banana-gun",
                "believe",
                "bloom",
                "bloxroute",
                "bluefin",
                "bonk",
                "bullx",
                "cetus",
                "clanker",
                "clipper",
                "coinbase-wallet",
                "convex",
                "cookdotmeme",
                "dexscreener",
                "dodo",
                "drift",
                "dydx",
                "eigenlayer",
                "ethena",
                "euler",
                "flashbots",
                "gmgn",
                "gmx",
                "hyperliquid",
                "ironbank",
                "jito",
                "kamino",
                "letsbonkdotfun",
                "level",
                "lido",
                "lifi",
                "lifinity",
                "looter",
                "maestro",
                "metaplex",
                "meth-protocol",
                "mevx",
                "moonshot",
                "morpho",
                "navi-protocol",
                "nova",
                "odos",
                "opensea",
                "orca",
                "ostium",
                "paal-ai",
                "pancakeswap",
                "paradex",
                "phantom",
                "photon",
                "pumpfun",
                "raydium",
                "scallop",
                "soltradingbot",
                "sosovalue",
                "spark",
                "stable-labs",
                "stakewise",
                "sushiswap",
                "syncswap",
                "tensor",
                "thorchain-dex",
                "tornado",
                "trojan",
                "uniswap",
                "uniswap-labs",
                "virtuals",
                "wildcat"
              ],
              "example": "aave"
            },
            "examples": {
              "aave": {
                "value": "aave",
                "summary": "Aave"
              },
              "aerodrome": {
                "value": "aerodrome",
                "summary": "Aerodrome"
              },
              "apex": {
                "value": "apex",
                "summary": "Apex"
              },
              "aries": {
                "value": "aries",
                "summary": "Aries"
              },
              "aster": {
                "value": "aster",
                "summary": "Aster"
              },
              "axiom": {
                "value": "axiom",
                "summary": "Axiom"
              },
              "balancer": {
                "value": "balancer",
                "summary": "Balancer"
              },
              "banana-gun": {
                "value": "banana-gun",
                "summary": "Banana Gun"
              },
              "believe": {
                "value": "believe",
                "summary": "Believe"
              },
              "bloom": {
                "value": "bloom",
                "summary": "Bloom"
              },
              "bloxroute": {
                "value": "bloxroute",
                "summary": "Bloxroute"
              },
              "bluefin": {
                "value": "bluefin",
                "summary": "Bluefin"
              },
              "bonk": {
                "value": "bonk",
                "summary": "Bonk"
              },
              "bullx": {
                "value": "bullx",
                "summary": "Bullx"
              },
              "cetus": {
                "value": "cetus",
                "summary": "Cetus"
              },
              "clanker": {
                "value": "clanker",
                "summary": "Clanker"
              },
              "clipper": {
                "value": "clipper",
                "summary": "Clipper"
              },
              "coinbase-wallet": {
                "value": "coinbase-wallet",
                "summary": "Coinbase Wallet"
              },
              "convex": {
                "value": "convex",
                "summary": "Convex"
              },
              "cookdotmeme": {
                "value": "cookdotmeme",
                "summary": "Cookdotmeme"
              },
              "dexscreener": {
                "value": "dexscreener",
                "summary": "Dexscreener"
              },
              "dodo": {
                "value": "dodo",
                "summary": "Dodo"
              },
              "drift": {
                "value": "drift",
                "summary": "Drift"
              },
              "dydx": {
                "value": "dydx",
                "summary": "Dydx"
              },
              "eigenlayer": {
                "value": "eigenlayer",
                "summary": "Eigenlayer"
              },
              "ethena": {
                "value": "ethena",
                "summary": "Ethena"
              },
              "euler": {
                "value": "euler",
                "summary": "Euler"
              },
              "flashbots": {
                "value": "flashbots",
                "summary": "Flashbots"
              },
              "gmgn": {
                "value": "gmgn",
                "summary": "Gmgn"
              },
              "gmx": {
                "value": "gmx",
                "summary": "Gmx"
              },
              "hyperliquid": {
                "value": "hyperliquid",
                "summary": "Hyperliquid"
              },
              "ironbank": {
                "value": "ironbank",
                "summary": "Ironbank"
              },
              "jito": {
                "value": "jito",
                "summary": "Jito"
              },
              "kamino": {
                "value": "kamino",
                "summary": "Kamino"
              },
              "letsbonkdotfun": {
                "value": "letsbonkdotfun",
                "summary": "Letsbonkdotfun"
              },
              "level": {
                "value": "level",
                "summary": "Level"
              },
              "lido": {
                "value": "lido",
                "summary": "Lido"
              },
              "lifi": {
                "value": "lifi",
                "summary": "Lifi"
              },
              "lifinity": {
                "value": "lifinity",
                "summary": "Lifinity"
              },
              "looter": {
                "value": "looter",
                "summary": "Looter"
              },
              "maestro": {
                "value": "maestro",
                "summary": "Maestro"
              },
              "metaplex": {
                "value": "metaplex",
                "summary": "Metaplex"
              },
              "meth-protocol": {
                "value": "meth-protocol",
                "summary": "Meth Protocol"
              },
              "mevx": {
                "value": "mevx",
                "summary": "Mevx"
              },
              "moonshot": {
                "value": "moonshot",
                "summary": "Moonshot"
              },
              "morpho": {
                "value": "morpho",
                "summary": "Morpho"
              },
              "navi-protocol": {
                "value": "navi-protocol",
                "summary": "Navi Protocol"
              },
              "nova": {
                "value": "nova",
                "summary": "Nova"
              },
              "odos": {
                "value": "odos",
                "summary": "Odos"
              },
              "opensea": {
                "value": "opensea",
                "summary": "Opensea"
              },
              "orca": {
                "value": "orca",
                "summary": "Orca"
              },
              "ostium": {
                "value": "ostium",
                "summary": "Ostium"
              },
              "paal-ai": {
                "value": "paal-ai",
                "summary": "Paal Ai"
              },
              "pancakeswap": {
                "value": "pancakeswap",
                "summary": "Pancakeswap"
              },
              "paradex": {
                "value": "paradex",
                "summary": "Paradex"
              },
              "phantom": {
                "value": "phantom",
                "summary": "Phantom"
              },
              "photon": {
                "value": "photon",
                "summary": "Photon"
              },
              "pumpfun": {
                "value": "pumpfun",
                "summary": "Pumpfun"
              },
              "raydium": {
                "value": "raydium",
                "summary": "Raydium"
              },
              "scallop": {
                "value": "scallop",
                "summary": "Scallop"
              },
              "soltradingbot": {
                "value": "soltradingbot",
                "summary": "Soltradingbot"
              },
              "sosovalue": {
                "value": "sosovalue",
                "summary": "Sosovalue"
              },
              "spark": {
                "value": "spark",
                "summary": "Spark"
              },
              "stable-labs": {
                "value": "stable-labs",
                "summary": "Stable Labs"
              },
              "stakewise": {
                "value": "stakewise",
                "summary": "Stakewise"
              },
              "sushiswap": {
                "value": "sushiswap",
                "summary": "Sushiswap"
              },
              "syncswap": {
                "value": "syncswap",
                "summary": "Syncswap"
              },
              "tensor": {
                "value": "tensor",
                "summary": "Tensor"
              },
              "thorchain-dex": {
                "value": "thorchain-dex",
                "summary": "Thorchain Dex"
              },
              "tornado": {
                "value": "tornado",
                "summary": "Tornado"
              },
              "trojan": {
                "value": "trojan",
                "summary": "Trojan"
              },
              "uniswap": {
                "value": "uniswap",
                "summary": "Uniswap"
              },
              "uniswap-labs": {
                "value": "uniswap-labs",
                "summary": "Uniswap Labs"
              },
              "virtuals": {
                "value": "virtuals",
                "summary": "Virtuals"
              },
              "wildcat": {
                "value": "wildcat",
                "summary": "Wildcat"
              },
              "multi": {
                "value": "aave,aerodrome",
                "summary": "Aave + Aerodrome"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/tokens-launched-by-launchpad": {
      "get": {
        "operationId": "MetricController_getResults_v1_tokens_launched_by_launchpad",
        "summary": "Tokens Launched By Launchpad",
        "description": "Retrieve the 'tokens-launched-by-launchpad' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "believe",
                "boopfun",
                "clanker",
                "fourmeme",
                "letsbonk",
                "moonshot",
                "other-launchpads",
                "pumpfun",
                "thearena",
                "zora"
              ],
              "example": "believe"
            },
            "examples": {
              "believe": {
                "value": "believe",
                "summary": "Believe"
              },
              "boopfun": {
                "value": "boopfun",
                "summary": "Boopfun"
              },
              "clanker": {
                "value": "clanker",
                "summary": "Clanker"
              },
              "fourmeme": {
                "value": "fourmeme",
                "summary": "Fourmeme"
              },
              "letsbonk": {
                "value": "letsbonk",
                "summary": "Letsbonk"
              },
              "moonshot": {
                "value": "moonshot",
                "summary": "Moonshot"
              },
              "other-launchpads": {
                "value": "other-launchpads",
                "summary": "Other Launchpads"
              },
              "pumpfun": {
                "value": "pumpfun",
                "summary": "Pumpfun"
              },
              "thearena": {
                "value": "thearena",
                "summary": "Thearena"
              },
              "zora": {
                "value": "zora",
                "summary": "Zora"
              },
              "multi": {
                "value": "believe,boopfun",
                "summary": "Believe + Boopfun"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/token-supply-staked": {
      "get": {
        "operationId": "MetricController_getResults_v1_token_supply_staked",
        "summary": "Token Supply Staked",
        "description": "Retrieve the 'token-supply-staked' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ethereum",
                "solana"
              ],
              "example": "ethereum"
            },
            "examples": {
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "ethereum,solana",
                "summary": "Ethereum + Solana"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/launchpad-bonding-volume": {
      "get": {
        "operationId": "MetricController_getResults_v1_launchpad_bonding_volume",
        "summary": "Launchpad Bonding Volume",
        "description": "Retrieve the 'launchpad-bonding-volume' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "believe",
                "cookmeme",
                "letsbonkfun",
                "moonshot",
                "pumpfun",
                "raydium",
                "wavebreak"
              ],
              "example": "believe"
            },
            "examples": {
              "believe": {
                "value": "believe",
                "summary": "Believe"
              },
              "cookmeme": {
                "value": "cookmeme",
                "summary": "Cookmeme"
              },
              "letsbonkfun": {
                "value": "letsbonkfun",
                "summary": "Letsbonkfun"
              },
              "moonshot": {
                "value": "moonshot",
                "summary": "Moonshot"
              },
              "pumpfun": {
                "value": "pumpfun",
                "summary": "Pumpfun"
              },
              "raydium": {
                "value": "raydium",
                "summary": "Raydium"
              },
              "wavebreak": {
                "value": "wavebreak",
                "summary": "Wavebreak"
              },
              "multi": {
                "value": "believe,cookmeme",
                "summary": "Believe + Cookmeme"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/launchpad-tokens-graduated": {
      "get": {
        "operationId": "MetricController_getResults_v1_launchpad_tokens_graduated",
        "summary": "Launchpad Tokens Graduated",
        "description": "Retrieve the 'launchpad-tokens-graduated' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bags",
                "believe",
                "boopfun",
                "cookmeme",
                "jupstudio",
                "letsbonk",
                "moonshot",
                "other-launchpads",
                "pumpfun",
                "raydium"
              ],
              "example": "bags"
            },
            "examples": {
              "bags": {
                "value": "bags",
                "summary": "Bags"
              },
              "believe": {
                "value": "believe",
                "summary": "Believe"
              },
              "boopfun": {
                "value": "boopfun",
                "summary": "Boopfun"
              },
              "cookmeme": {
                "value": "cookmeme",
                "summary": "Cookmeme"
              },
              "jupstudio": {
                "value": "jupstudio",
                "summary": "Jupstudio"
              },
              "letsbonk": {
                "value": "letsbonk",
                "summary": "Letsbonk"
              },
              "moonshot": {
                "value": "moonshot",
                "summary": "Moonshot"
              },
              "other-launchpads": {
                "value": "other-launchpads",
                "summary": "Other Launchpads"
              },
              "pumpfun": {
                "value": "pumpfun",
                "summary": "Pumpfun"
              },
              "raydium": {
                "value": "raydium",
                "summary": "Raydium"
              },
              "multi": {
                "value": "bags,believe",
                "summary": "Bags + Believe"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/token-price-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_token_price_usd",
        "summary": "Token Price Usd",
        "description": "Retrieve the 'token-price-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-priority-fee-total-native": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_priority_fee_total_native",
        "summary": "Transaction Priority Fee Total Native",
        "description": "Retrieve the 'transaction-priority-fee-total-native' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/active-address-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_active_address_total",
        "summary": "Active Address Total",
        "description": "Retrieve the 'active-address-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_total_usd",
        "summary": "Etf Flows Total Usd",
        "description": "Retrieve the 'etf-flows-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "bitcoin",
                "ethereum",
                "solana"
              ],
              "example": "bitcoin"
            },
            "examples": {
              "bitcoin": {
                "value": "bitcoin",
                "summary": "Bitcoin"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "bitcoin,ethereum",
                "summary": "Bitcoin + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-other-fee-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_other_fee_total_usd",
        "summary": "Transaction Other Fee Total Usd",
        "description": "Retrieve the 'transaction-other-fee-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fee-med-native": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fee_med_native",
        "summary": "Transaction Fee Med Native",
        "description": "Retrieve the 'transaction-fee-med-native' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-priority-fee-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_priority_fee_total_usd",
        "summary": "Transaction Priority Fee Total Usd",
        "description": "Retrieve the 'transaction-priority-fee-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fail-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fail_total",
        "summary": "Transaction Fail Total",
        "description": "Retrieve the 'transaction-fail-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/stablecoin-circulating-supply-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_stablecoin_circulating_supply_total_usd",
        "summary": "Stablecoin Circulating Supply Total Usd",
        "description": "Retrieve the 'stablecoin-circulating-supply-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/app-revenue-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_app_revenue_total_usd",
        "summary": "App Revenue Total Usd",
        "description": "Retrieve the 'app-revenue-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fee-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fee_total_usd",
        "summary": "Transaction Fee Total Usd",
        "description": "Retrieve the 'transaction-fee-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/token-fdv-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_token_fdv_usd",
        "summary": "Token Fdv Usd",
        "description": "Retrieve the 'token-fdv-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fee-total-native": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fee_total_native",
        "summary": "Transaction Fee Total Native",
        "description": "Retrieve the 'transaction-fee-total-native' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-base-fee-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_base_fee_total_usd",
        "summary": "Transaction Base Fee Total Usd",
        "description": "Retrieve the 'transaction-base-fee-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-succeed-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_succeed_total",
        "summary": "Transaction Succeed Total",
        "description": "Retrieve the 'transaction-succeed-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fee-med-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fee_med_usd",
        "summary": "Transaction Fee Med Usd",
        "description": "Retrieve the 'transaction-fee-med-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/stablecoin-supply-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_stablecoin_supply_total_usd",
        "summary": "Stablecoin Supply Total Usd",
        "description": "Retrieve the 'stablecoin-supply-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fee-avg-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fee_avg_usd",
        "summary": "Transaction Fee Avg Usd",
        "description": "Retrieve the 'transaction-fee-avg-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/dex-spot-volume-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_dex_spot_volume_total_usd",
        "summary": "Dex Spot Volume Total Usd",
        "description": "Retrieve the 'dex-spot-volume-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/token-supply": {
      "get": {
        "operationId": "MetricController_getResults_v1_token_supply",
        "summary": "Token Supply",
        "description": "Retrieve the 'token-supply' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-base-fee-total-native": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_base_fee_total_native",
        "summary": "Transaction Base Fee Total Native",
        "description": "Retrieve the 'transaction-base-fee-total-native' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-other-fee-total-native": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_other_fee_total_native",
        "summary": "Transaction Other Fee Total Native",
        "description": "Retrieve the 'transaction-other-fee-total-native' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "ethereum"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "multi": {
                "value": "arbitrum,ethereum",
                "summary": "Arbitrum + Ethereum"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/transaction-fee-avg-native": {
      "get": {
        "operationId": "MetricController_getResults_v1_transaction_fee_avg_native",
        "summary": "Transaction Fee Avg Native",
        "description": "Retrieve the 'transaction-fee-avg-native' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "ethereum",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "ethereum": {
                "value": "ethereum",
                "summary": "Ethereum"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/sequencer-cost-total": {
      "get": {
        "operationId": "MetricController_getResults_v1_sequencer_cost_total",
        "summary": "Sequencer Cost Total",
        "description": "Retrieve the 'sequencer-cost-total' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/rev-native": {
      "get": {
        "operationId": "MetricController_getResults_v1_rev_native",
        "summary": "Rev Native",
        "description": "Retrieve the 'rev-native' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base",
                "solana"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "solana": {
                "value": "solana",
                "summary": "Solana"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/sequencer-gross-profit": {
      "get": {
        "operationId": "MetricController_getResults_v1_sequencer_gross_profit",
        "summary": "Sequencer Gross Profit",
        "description": "Retrieve the 'sequencer-gross-profit' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum",
                "base"
              ],
              "example": "arbitrum"
            },
            "examples": {
              "arbitrum": {
                "value": "arbitrum",
                "summary": "Arbitrum"
              },
              "base": {
                "value": "base",
                "summary": "Base"
              },
              "multi": {
                "value": "arbitrum,base",
                "summary": "Arbitrum + Base"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/revenue-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_revenue_total_usd",
        "summary": "Revenue Total Usd",
        "description": "Retrieve the 'revenue-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "aave",
                "aerodrome",
                "apex",
                "aries",
                "aster",
                "axiom",
                "balancer",
                "banana-gun",
                "believe",
                "bloom",
                "bloxroute",
                "bluefin",
                "bonk",
                "bullx",
                "cetus",
                "clanker",
                "clipper",
                "coinbase-wallet",
                "convex",
                "cookdotmeme",
                "dexscreener",
                "dodo",
                "drift",
                "dydx",
                "eigenlayer",
                "ethena",
                "euler",
                "flashbots",
                "gmgn",
                "gmx",
                "hyperliquid",
                "ironbank",
                "jito",
                "kamino",
                "letsbonkdotfun",
                "level",
                "lido",
                "lifi",
                "lifinity",
                "looter",
                "maestro",
                "metaplex",
                "meth-protocol",
                "mevx",
                "moonshot",
                "morpho",
                "navi-protocol",
                "nova",
                "odos",
                "opensea",
                "orca",
                "ostium",
                "paal-ai",
                "pancakeswap",
                "paradex",
                "phantom",
                "photon",
                "pumpfun",
                "raydium",
                "scallop",
                "soltradingbot",
                "sosovalue",
                "spark",
                "stable-labs",
                "stakewise",
                "sushiswap",
                "syncswap",
                "tensor",
                "thorchain-dex",
                "tornado",
                "trojan",
                "uniswap",
                "uniswap-labs",
                "virtuals",
                "wildcat"
              ],
              "example": "aave"
            },
            "examples": {
              "aave": {
                "value": "aave",
                "summary": "Aave"
              },
              "aerodrome": {
                "value": "aerodrome",
                "summary": "Aerodrome"
              },
              "apex": {
                "value": "apex",
                "summary": "Apex"
              },
              "aries": {
                "value": "aries",
                "summary": "Aries"
              },
              "aster": {
                "value": "aster",
                "summary": "Aster"
              },
              "axiom": {
                "value": "axiom",
                "summary": "Axiom"
              },
              "balancer": {
                "value": "balancer",
                "summary": "Balancer"
              },
              "banana-gun": {
                "value": "banana-gun",
                "summary": "Banana Gun"
              },
              "believe": {
                "value": "believe",
                "summary": "Believe"
              },
              "bloom": {
                "value": "bloom",
                "summary": "Bloom"
              },
              "bloxroute": {
                "value": "bloxroute",
                "summary": "Bloxroute"
              },
              "bluefin": {
                "value": "bluefin",
                "summary": "Bluefin"
              },
              "bonk": {
                "value": "bonk",
                "summary": "Bonk"
              },
              "bullx": {
                "value": "bullx",
                "summary": "Bullx"
              },
              "cetus": {
                "value": "cetus",
                "summary": "Cetus"
              },
              "clanker": {
                "value": "clanker",
                "summary": "Clanker"
              },
              "clipper": {
                "value": "clipper",
                "summary": "Clipper"
              },
              "coinbase-wallet": {
                "value": "coinbase-wallet",
                "summary": "Coinbase Wallet"
              },
              "convex": {
                "value": "convex",
                "summary": "Convex"
              },
              "cookdotmeme": {
                "value": "cookdotmeme",
                "summary": "Cookdotmeme"
              },
              "dexscreener": {
                "value": "dexscreener",
                "summary": "Dexscreener"
              },
              "dodo": {
                "value": "dodo",
                "summary": "Dodo"
              },
              "drift": {
                "value": "drift",
                "summary": "Drift"
              },
              "dydx": {
                "value": "dydx",
                "summary": "Dydx"
              },
              "eigenlayer": {
                "value": "eigenlayer",
                "summary": "Eigenlayer"
              },
              "ethena": {
                "value": "ethena",
                "summary": "Ethena"
              },
              "euler": {
                "value": "euler",
                "summary": "Euler"
              },
              "flashbots": {
                "value": "flashbots",
                "summary": "Flashbots"
              },
              "gmgn": {
                "value": "gmgn",
                "summary": "Gmgn"
              },
              "gmx": {
                "value": "gmx",
                "summary": "Gmx"
              },
              "hyperliquid": {
                "value": "hyperliquid",
                "summary": "Hyperliquid"
              },
              "ironbank": {
                "value": "ironbank",
                "summary": "Ironbank"
              },
              "jito": {
                "value": "jito",
                "summary": "Jito"
              },
              "kamino": {
                "value": "kamino",
                "summary": "Kamino"
              },
              "letsbonkdotfun": {
                "value": "letsbonkdotfun",
                "summary": "Letsbonkdotfun"
              },
              "level": {
                "value": "level",
                "summary": "Level"
              },
              "lido": {
                "value": "lido",
                "summary": "Lido"
              },
              "lifi": {
                "value": "lifi",
                "summary": "Lifi"
              },
              "lifinity": {
                "value": "lifinity",
                "summary": "Lifinity"
              },
              "looter": {
                "value": "looter",
                "summary": "Looter"
              },
              "maestro": {
                "value": "maestro",
                "summary": "Maestro"
              },
              "metaplex": {
                "value": "metaplex",
                "summary": "Metaplex"
              },
              "meth-protocol": {
                "value": "meth-protocol",
                "summary": "Meth Protocol"
              },
              "mevx": {
                "value": "mevx",
                "summary": "Mevx"
              },
              "moonshot": {
                "value": "moonshot",
                "summary": "Moonshot"
              },
              "morpho": {
                "value": "morpho",
                "summary": "Morpho"
              },
              "navi-protocol": {
                "value": "navi-protocol",
                "summary": "Navi Protocol"
              },
              "nova": {
                "value": "nova",
                "summary": "Nova"
              },
              "odos": {
                "value": "odos",
                "summary": "Odos"
              },
              "opensea": {
                "value": "opensea",
                "summary": "Opensea"
              },
              "orca": {
                "value": "orca",
                "summary": "Orca"
              },
              "ostium": {
                "value": "ostium",
                "summary": "Ostium"
              },
              "paal-ai": {
                "value": "paal-ai",
                "summary": "Paal Ai"
              },
              "pancakeswap": {
                "value": "pancakeswap",
                "summary": "Pancakeswap"
              },
              "paradex": {
                "value": "paradex",
                "summary": "Paradex"
              },
              "phantom": {
                "value": "phantom",
                "summary": "Phantom"
              },
              "photon": {
                "value": "photon",
                "summary": "Photon"
              },
              "pumpfun": {
                "value": "pumpfun",
                "summary": "Pumpfun"
              },
              "raydium": {
                "value": "raydium",
                "summary": "Raydium"
              },
              "scallop": {
                "value": "scallop",
                "summary": "Scallop"
              },
              "soltradingbot": {
                "value": "soltradingbot",
                "summary": "Soltradingbot"
              },
              "sosovalue": {
                "value": "sosovalue",
                "summary": "Sosovalue"
              },
              "spark": {
                "value": "spark",
                "summary": "Spark"
              },
              "stable-labs": {
                "value": "stable-labs",
                "summary": "Stable Labs"
              },
              "stakewise": {
                "value": "stakewise",
                "summary": "Stakewise"
              },
              "sushiswap": {
                "value": "sushiswap",
                "summary": "Sushiswap"
              },
              "syncswap": {
                "value": "syncswap",
                "summary": "Syncswap"
              },
              "tensor": {
                "value": "tensor",
                "summary": "Tensor"
              },
              "thorchain-dex": {
                "value": "thorchain-dex",
                "summary": "Thorchain Dex"
              },
              "tornado": {
                "value": "tornado",
                "summary": "Tornado"
              },
              "trojan": {
                "value": "trojan",
                "summary": "Trojan"
              },
              "uniswap": {
                "value": "uniswap",
                "summary": "Uniswap"
              },
              "uniswap-labs": {
                "value": "uniswap-labs",
                "summary": "Uniswap Labs"
              },
              "virtuals": {
                "value": "virtuals",
                "summary": "Virtuals"
              },
              "wildcat": {
                "value": "wildcat",
                "summary": "Wildcat"
              },
              "multi": {
                "value": "aave,aerodrome",
                "summary": "Aave + Aerodrome"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/etf-flows-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_etf_flows_usd",
        "summary": "Etf Flows Usd",
        "description": "Retrieve the 'etf-flows-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "ARKB",
                "BITB",
                "BRRR",
                "BTC",
                "BTCO",
                "BTCW",
                "CETH",
                "ETH",
                "ETHA",
                "ETHE",
                "ETHV",
                "ETHW",
                "EZBC",
                "EZET",
                "FBTC",
                "FETH",
                "GBTC",
                "HODL",
                "IBIT",
                "QETH",
                "SSK"
              ],
              "example": "ARKB"
            },
            "examples": {
              "ARKB": {
                "value": "ARKB",
                "summary": "ARKB"
              },
              "BITB": {
                "value": "BITB",
                "summary": "BITB"
              },
              "BRRR": {
                "value": "BRRR",
                "summary": "BRRR"
              },
              "BTC": {
                "value": "BTC",
                "summary": "BTC"
              },
              "BTCO": {
                "value": "BTCO",
                "summary": "BTCO"
              },
              "BTCW": {
                "value": "BTCW",
                "summary": "BTCW"
              },
              "CETH": {
                "value": "CETH",
                "summary": "CETH"
              },
              "ETH": {
                "value": "ETH",
                "summary": "ETH"
              },
              "ETHA": {
                "value": "ETHA",
                "summary": "ETHA"
              },
              "ETHE": {
                "value": "ETHE",
                "summary": "ETHE"
              },
              "ETHV": {
                "value": "ETHV",
                "summary": "ETHV"
              },
              "ETHW": {
                "value": "ETHW",
                "summary": "ETHW"
              },
              "EZBC": {
                "value": "EZBC",
                "summary": "EZBC"
              },
              "EZET": {
                "value": "EZET",
                "summary": "EZET"
              },
              "FBTC": {
                "value": "FBTC",
                "summary": "FBTC"
              },
              "FETH": {
                "value": "FETH",
                "summary": "FETH"
              },
              "GBTC": {
                "value": "GBTC",
                "summary": "GBTC"
              },
              "HODL": {
                "value": "HODL",
                "summary": "HODL"
              },
              "IBIT": {
                "value": "IBIT",
                "summary": "IBIT"
              },
              "QETH": {
                "value": "QETH",
                "summary": "QETH"
              },
              "SSK": {
                "value": "SSK",
                "summary": "SSK"
              },
              "multi": {
                "value": "ARKB,BITB",
                "summary": "ARKB + BITB"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-market-cap-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_market_cap_usd",
        "summary": "Treasury Market Cap Usd",
        "description": "Retrieve the 'treasury-market-cap-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCM",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "FGNX",
                "GAME",
                "HYPD",
                "MSTR",
                "NAKA",
                "SBET",
                "SMLR",
                "SQNS",
                "STSS",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCM": {
                "value": "BTCM",
                "summary": "BTCM"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "FGNX": {
                "value": "FGNX",
                "summary": "FGNX"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "NAKA": {
                "value": "NAKA",
                "summary": "NAKA"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STSS": {
                "value": "STSS",
                "summary": "STSS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-enterprise-value-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_enterprise_value_usd",
        "summary": "Treasury Enterprise Value Usd",
        "description": "Retrieve the 'treasury-enterprise-value-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCM",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "FGNX",
                "GAME",
                "HYPD",
                "MSTR",
                "NAKA",
                "SBET",
                "SMLR",
                "SQNS",
                "STSS",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCM": {
                "value": "BTCM",
                "summary": "BTCM"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "FGNX": {
                "value": "FGNX",
                "summary": "FGNX"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "NAKA": {
                "value": "NAKA",
                "summary": "NAKA"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STSS": {
                "value": "STSS",
                "summary": "STSS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-nav-sol-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_nav_sol_usd",
        "summary": "Treasury Nav Sol Usd",
        "description": "Retrieve the 'treasury-nav-sol-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BTCM",
                "DFDV",
                "STKE",
                "STSS",
                "UPXI"
              ],
              "example": "BTCM"
            },
            "examples": {
              "BTCM": {
                "value": "BTCM",
                "summary": "BTCM"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "STKE": {
                "value": "STKE",
                "summary": "STKE"
              },
              "STSS": {
                "value": "STSS",
                "summary": "STSS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BTCM,DFDV",
                "summary": "BTCM + DFDV"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-holdings-sol": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_holdings_sol",
        "summary": "Treasury Holdings Sol",
        "description": "Retrieve the 'treasury-holdings-sol' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BTCM",
                "DFDV",
                "STKE",
                "STSS",
                "UPXI"
              ],
              "example": "BTCM"
            },
            "examples": {
              "BTCM": {
                "value": "BTCM",
                "summary": "BTCM"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "STKE": {
                "value": "STKE",
                "summary": "STKE"
              },
              "STSS": {
                "value": "STSS",
                "summary": "STSS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BTCM,DFDV",
                "summary": "BTCM + DFDV"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-volume-total-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_volume_total_usd",
        "summary": "Treasury Volume Total Usd",
        "description": "Retrieve the 'treasury-volume-total-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BNC",
                "BTBT",
                "BTCM",
                "BTCS",
                "CEP",
                "CEPO",
                "DFDV",
                "ETHM",
                "ETHZ",
                "FGNX",
                "GAME",
                "HYPD",
                "MSTR",
                "NAKA",
                "SBET",
                "SMLR",
                "SQNS",
                "STKE",
                "STSS",
                "UPXI"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCM": {
                "value": "BTCM",
                "summary": "BTCM"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "DFDV": {
                "value": "DFDV",
                "summary": "DFDV"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "FGNX": {
                "value": "FGNX",
                "summary": "FGNX"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "NAKA": {
                "value": "NAKA",
                "summary": "NAKA"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "STKE": {
                "value": "STKE",
                "summary": "STKE"
              },
              "STSS": {
                "value": "STSS",
                "summary": "STSS"
              },
              "UPXI": {
                "value": "UPXI",
                "summary": "UPXI"
              },
              "multi": {
                "value": "BMNR,BNC",
                "summary": "BMNR + BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-nav-bnb-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_nav_bnb_usd",
        "summary": "Treasury Nav Bnb Usd",
        "description": "Retrieve the 'treasury-nav-bnb-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BNC"
              ],
              "example": "BNC"
            },
            "examples": {
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-holdings-bnb": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_holdings_bnb",
        "summary": "Treasury Holdings Bnb",
        "description": "Retrieve the 'treasury-holdings-bnb' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BNC"
              ],
              "example": "BNC"
            },
            "examples": {
              "BNC": {
                "value": "BNC",
                "summary": "BNC"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-holdings-btc": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_holdings_btc",
        "summary": "Treasury Holdings Btc",
        "description": "Retrieve the 'treasury-holdings-btc' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "CEP",
                "CEPO",
                "MSTR",
                "NAKA",
                "SMLR",
                "SQNS"
              ],
              "example": "CEP"
            },
            "examples": {
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "NAKA": {
                "value": "NAKA",
                "summary": "NAKA"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "multi": {
                "value": "CEP,CEPO",
                "summary": "CEP + CEPO"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-nav-btc-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_nav_btc_usd",
        "summary": "Treasury Nav Btc Usd",
        "description": "Retrieve the 'treasury-nav-btc-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "CEP",
                "CEPO",
                "MSTR",
                "NAKA",
                "SMLR",
                "SQNS"
              ],
              "example": "CEP"
            },
            "examples": {
              "CEP": {
                "value": "CEP",
                "summary": "CEP"
              },
              "CEPO": {
                "value": "CEPO",
                "summary": "CEPO"
              },
              "MSTR": {
                "value": "MSTR",
                "summary": "MSTR"
              },
              "NAKA": {
                "value": "NAKA",
                "summary": "NAKA"
              },
              "SMLR": {
                "value": "SMLR",
                "summary": "SMLR"
              },
              "SQNS": {
                "value": "SQNS",
                "summary": "SQNS"
              },
              "multi": {
                "value": "CEP,CEPO",
                "summary": "CEP + CEPO"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-holdings-eth": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_holdings_eth",
        "summary": "Treasury Holdings Eth",
        "description": "Retrieve the 'treasury-holdings-eth' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BTBT",
                "BTCS",
                "ETHM",
                "ETHZ",
                "FGNX",
                "GAME",
                "SBET"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "FGNX": {
                "value": "FGNX",
                "summary": "FGNX"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "multi": {
                "value": "BMNR,BTBT",
                "summary": "BMNR + BTBT"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-nav-eth-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_nav_eth_usd",
        "summary": "Treasury Nav Eth Usd",
        "description": "Retrieve the 'treasury-nav-eth-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "BMNR",
                "BTBT",
                "BTCS",
                "ETHM",
                "ETHZ",
                "FGNX",
                "GAME",
                "SBET"
              ],
              "example": "BMNR"
            },
            "examples": {
              "BMNR": {
                "value": "BMNR",
                "summary": "BMNR"
              },
              "BTBT": {
                "value": "BTBT",
                "summary": "BTBT"
              },
              "BTCS": {
                "value": "BTCS",
                "summary": "BTCS"
              },
              "ETHM": {
                "value": "ETHM",
                "summary": "ETHM"
              },
              "ETHZ": {
                "value": "ETHZ",
                "summary": "ETHZ"
              },
              "FGNX": {
                "value": "FGNX",
                "summary": "FGNX"
              },
              "GAME": {
                "value": "GAME",
                "summary": "GAME"
              },
              "SBET": {
                "value": "SBET",
                "summary": "SBET"
              },
              "multi": {
                "value": "BMNR,BTBT",
                "summary": "BMNR + BTBT"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-nav-hype-usd": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_nav_hype_usd",
        "summary": "Treasury Nav Hype Usd",
        "description": "Retrieve the 'treasury-nav-hype-usd' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "HYPD"
              ],
              "example": "HYPD"
            },
            "examples": {
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/v1/metrics/treasury-holdings-hype": {
      "get": {
        "operationId": "MetricController_getResults_v1_treasury_holdings_hype",
        "summary": "Treasury Holdings Hype",
        "description": "Retrieve the 'treasury-holdings-hype' metric for supported projects.",
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "required": true,
            "description": "Project slug (comma-separated for multiple).",
            "schema": {
              "type": "string",
              "enum": [
                "HYPD"
              ],
              "example": "HYPD"
            },
            "examples": {
              "HYPD": {
                "value": "HYPD",
                "summary": "HYPD"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "projectName": [
                    {
                      "date": "2025-08-10",
                      "value": 123456.789
                    },
                    {
                      "date": "2025-08-11",
                      "value": 234567.89
                    },
                    {
                      "date": "2025-08-12",
                      "value": 345678.901
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Blockworks API",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api.blockworks.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "TagResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "color": {
            "type": "string",
            "maxLength": 6
          }
        },
        "required": [
          "id",
          "name",
          "color"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "client_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "location": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 16777215
          },
          "image": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "confirmed_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "status": {
            "type": "boolean",
            "nullable": true
          },
          "created_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 25
          },
          "client_role": {
            "type": "number",
            "description": "expanded in client requests",
            "enum": [
              1,
              32
            ]
          }
        },
        "required": [
          "id",
          "client_id",
          "name",
          "first_name",
          "last_name",
          "email",
          "location",
          "description",
          "image",
          "confirmed_at",
          "status",
          "created_at",
          "phone_number"
        ]
      },
      "AssetSector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "created_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "id",
          "title",
          "created_at"
        ]
      },
      "AssetReference": {
        "type": "object",
        "properties": {
          "asset_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "coingecko": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "messari": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "ghost_analyst_slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 24
          },
          "trading_view": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          }
        },
        "required": [
          "asset_id",
          "coingecko",
          "messari",
          "ghost_analyst_slug",
          "trading_view"
        ]
      },
      "MarketCap": {
        "type": "object",
        "properties": {
          "asset_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "rank": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "usd": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "dominance": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "percent_change_btc_1_h": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "percent_change_btc_24_h": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "percent_change_usd_1_h": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "percent_change_usd_24_h": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "percent_change_eth_1_h": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "percent_change_eth_24_h": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "asset_id",
          "rank",
          "usd",
          "dominance",
          "percent_change_btc_1_h",
          "percent_change_btc_24_h",
          "percent_change_usd_1_h",
          "percent_change_usd_24_h",
          "percent_change_eth_1_h",
          "percent_change_eth_24_h",
          "updated_at"
        ]
      },
      "OhlcvLast24H": {
        "type": "object",
        "properties": {
          "asset_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "open": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "high": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "low": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "close": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "volume": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "asset_id",
          "open",
          "high",
          "low",
          "close",
          "volume",
          "updated_at"
        ]
      },
      "Price": {
        "type": "object",
        "properties": {
          "asset_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "usd": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "btc": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "eth": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "sparkline_7d": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "asset_id",
          "usd",
          "btc",
          "eth",
          "sparkline_7d",
          "updated_at"
        ]
      },
      "Supply": {
        "type": "object",
        "properties": {
          "asset_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "circulating": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "liquid": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "total": {
            "type": "number",
            "nullable": true,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          }
        },
        "required": [
          "asset_id",
          "circulating",
          "liquid",
          "total"
        ]
      },
      "Chain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "asset_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "is_test_net": {
            "type": "integer",
            "nullable": true,
            "default": 0,
            "minimum": 0,
            "maximum": 65535
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "id",
          "asset_id",
          "title",
          "slug",
          "type",
          "image_url",
          "is_test_net",
          "updated_at"
        ]
      },
      "AssetAddress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "asset_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "chain_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "address": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "chain": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/Chain"
              }
            ]
          }
        },
        "required": [
          "id",
          "asset_id",
          "chain_id",
          "type",
          "address",
          "updated_at"
        ]
      },
      "Market": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "asset_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "volume_24_h": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "ath": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "ath_change_percentage": {
            "type": "number",
            "nullable": true,
            "format": "float",
            "minimum": 1.17549435e-38,
            "maximum": 3.402823e+38
          },
          "ath_date": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "id",
          "asset_id",
          "volume_24_h",
          "ath",
          "ath_change_percentage",
          "ath_date",
          "updated_at"
        ]
      },
      "AssetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "code": {
            "type": "string",
            "nullable": true,
            "maxLength": 20
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "tag_line": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "legacy_sector": {
            "type": "string",
            "nullable": true,
            "maxLength": 50
          },
          "category": {
            "type": "string",
            "nullable": true,
            "maxLength": 25
          },
          "is_supported": {
            "type": "boolean",
            "nullable": true
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "sector_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Infrastructure",
              "Application"
            ]
          },
          "sector": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetSector"
              }
            ]
          },
          "reference": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetReference"
              }
            ]
          },
          "market_cap": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketCap"
              }
            ]
          },
          "ohlcv_last_24_h": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/OhlcvLast24H"
              }
            ]
          },
          "price": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          },
          "supply": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/Supply"
              }
            ]
          },
          "addresses": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetAddress"
            }
          },
          "markets": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Market"
            }
          },
          "is_favorite": {
            "type": "boolean",
            "description": "Expandable relationship"
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "slug",
          "tag_line",
          "description",
          "image_url",
          "legacy_sector",
          "category",
          "is_supported",
          "updated_at",
          "sector_id",
          "type"
        ]
      },
      "AssetResponseBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "code": {
            "type": "string",
            "nullable": true,
            "maxLength": 20
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "tag_line": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "legacy_sector": {
            "type": "string",
            "nullable": true,
            "maxLength": 50
          },
          "category": {
            "type": "string",
            "nullable": true,
            "maxLength": 25
          },
          "is_supported": {
            "type": "boolean",
            "nullable": true
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "sector_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Infrastructure",
              "Application"
            ]
          },
          "market_cap": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketCap"
              }
            ]
          },
          "price": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/Price"
              }
            ]
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "slug",
          "tag_line",
          "description",
          "image_url",
          "legacy_sector",
          "category",
          "is_supported",
          "updated_at",
          "sector_id",
          "type"
        ]
      },
      "QueryExecutionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "query_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "execution_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "nullable": true,
            "enum": [
              "pending",
              "executing",
              "success",
              "failed"
            ]
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "error": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "execution_ended_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp in milliseconds"
          },
          "execution_started_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp in milliseconds"
          },
          "expires_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "is_execution_finished_cache": {
            "type": "boolean",
            "nullable": true
          },
          "created_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "id",
          "user_id",
          "query_id",
          "execution_id",
          "state",
          "metadata",
          "error",
          "execution_ended_at",
          "execution_started_at",
          "expires_at",
          "is_execution_finished_cache",
          "created_at",
          "updated_at"
        ]
      },
      "QueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "sql": {
            "type": "string",
            "nullable": true,
            "maxLength": 16777215
          },
          "created_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "tag_ids": {
            "description": "Expandable relationship. Included if tags are expanded",
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 4294967295,
              "minimum": 0
            }
          },
          "tags": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "user": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              }
            ]
          },
          "last_execution_id_cache": {
            "type": "string",
            "maxLength": 255
          },
          "last_execution_cache": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryExecutionResponse"
              }
            ]
          },
          "visualizations": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisualizationResponse"
            }
          }
        },
        "required": [
          "id",
          "user_id",
          "title",
          "slug",
          "sql",
          "created_at",
          "updated_at",
          "last_execution_id_cache"
        ]
      },
      "VisualizationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "query_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "client_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "counter",
              "table",
              "timeseries",
              "radial",
              "pie",
              "sankey"
            ]
          },
          "status": {
            "type": "string",
            "default": "draft",
            "enum": [
              "hidden",
              "draft",
              "published"
            ]
          },
          "scope": {
            "type": "string",
            "default": "client",
            "enum": [
              "client",
              "research",
              "public"
            ]
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 4294967295
          },
          "config": {
            "type": "string",
            "nullable": true,
            "maxLength": 4294967295
          },
          "obscured_screenshot_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "created_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "tag_ids": {
            "description": "Expandable relationship. Included if tags are expanded",
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 4294967295,
              "minimum": 0
            }
          },
          "tags": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "user": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              }
            ]
          },
          "query": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryResponse"
              }
            ]
          }
        },
        "required": [
          "id",
          "query_id",
          "user_id",
          "client_id",
          "type",
          "status",
          "scope",
          "title",
          "subtitle",
          "description",
          "config",
          "obscured_screenshot_url",
          "created_at",
          "updated_at"
        ]
      },
      "DashboardVisualizationResponse": {
        "type": "object",
        "properties": {
          "dashboard_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "visualization_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "visualization_slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "is_featured": {
            "type": "boolean",
            "default": "0"
          },
          "created_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "visualization": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/VisualizationResponse"
              }
            ]
          }
        },
        "required": [
          "dashboard_id",
          "visualization_id",
          "visualization_slug",
          "is_featured",
          "created_at"
        ]
      },
      "DashboardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "user_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "client_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "asset_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "hidden",
              "draft",
              "published"
            ]
          },
          "scope": {
            "type": "string",
            "default": "client",
            "enum": [
              "client",
              "research",
              "public"
            ]
          },
          "title": {
            "type": "string",
            "nullable": true,
            "minLength": 3,
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "count_cache": {
            "type": "integer",
            "nullable": true,
            "default": "0",
            "minimum": 0,
            "maximum": 255
          },
          "layout_config": {
            "type": "string",
            "nullable": true,
            "maxLength": 16777215
          },
          "created_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "tag_ids": {
            "description": "Expandable relationship. Included if tags are expanded",
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 4294967295,
              "minimum": 0
            }
          },
          "tags": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          },
          "user": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              }
            ]
          },
          "asset": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetResponseBase"
              }
            ]
          },
          "dashboard_visualizations": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardVisualizationResponse"
            }
          }
        },
        "required": [
          "id",
          "user_id",
          "client_id",
          "asset_id",
          "slug",
          "status",
          "scope",
          "title",
          "subtitle",
          "description",
          "count_cache",
          "layout_config",
          "created_at",
          "updated_at"
        ]
      },
      "DashboardPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "DashboardVisualizationCreateRequest": {
        "type": "object",
        "properties": {
          "visualization_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "is_featured": {
            "type": "boolean",
            "default": "0"
          },
          "scope": {
            "type": "string",
            "enum": [
              "client",
              "research",
              "public"
            ]
          }
        },
        "required": [
          "visualization_id",
          "is_featured"
        ]
      },
      "DashboardCreateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "minLength": 3,
            "maxLength": 255
          },
          "asset_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "layout_config": {
            "type": "string",
            "nullable": true,
            "maxLength": 16777215
          },
          "status": {
            "type": "string",
            "default": "draft",
            "enum": [
              "hidden",
              "draft",
              "published"
            ]
          },
          "scope": {
            "type": "string",
            "default": "client",
            "enum": [
              "client",
              "research",
              "public"
            ]
          },
          "tag_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          },
          "dashboard_visualizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardVisualizationCreateRequest"
            }
          }
        },
        "required": [
          "title",
          "asset_id",
          "slug",
          "description",
          "layout_config",
          "status",
          "scope"
        ]
      },
      "DashboardUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "minLength": 3,
            "maxLength": 255
          },
          "asset_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "layout_config": {
            "type": "string",
            "nullable": true,
            "maxLength": 16777215
          },
          "tag_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          },
          "dashboard_visualizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardVisualizationCreateRequest"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "hidden",
              "draft",
              "published"
            ]
          },
          "scope": {
            "type": "string",
            "enum": [
              "client",
              "research",
              "public"
            ]
          }
        },
        "required": [
          "status",
          "scope"
        ]
      },
      "QueryExecutionRowMetadata": {
        "type": "object",
        "properties": {}
      },
      "QueryExecutionRowPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "additionalProperties": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/QueryExecutionRowMetadata"
          }
        },
        "required": [
          "page",
          "total",
          "data",
          "metadata"
        ]
      },
      "QueryExecutionPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryExecutionResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "QueryExecutionCreateRequest": {
        "type": "object",
        "properties": {
          "query_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          }
        },
        "required": [
          "query_id"
        ]
      },
      "QueryPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "QueryCreateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "sql": {
            "type": "string",
            "nullable": true,
            "maxLength": 16777215
          },
          "tag_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          }
        },
        "required": [
          "title",
          "sql"
        ]
      },
      "QueryCloneRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "visualization_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          }
        },
        "required": [
          "id",
          "title"
        ]
      },
      "QueryUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "sql": {
            "type": "string",
            "nullable": true,
            "maxLength": 16777215
          },
          "tag_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          }
        }
      },
      "TagPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "TagCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "color": {
            "type": "string",
            "maxLength": 6
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "TagUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "color": {
            "type": "string",
            "maxLength": 6
          }
        }
      },
      "VisualizationPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisualizationResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "VisualizationCreateRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "counter",
              "table",
              "timeseries",
              "radial",
              "pie",
              "sankey"
            ]
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "config": {
            "type": "string",
            "nullable": true,
            "maxLength": 4294967295
          },
          "query_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "client_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 4294967295
          },
          "status": {
            "type": "string",
            "default": "draft",
            "enum": [
              "hidden",
              "draft",
              "published"
            ]
          },
          "scope": {
            "type": "string",
            "default": "client",
            "enum": [
              "client",
              "research",
              "public"
            ]
          },
          "tag_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          }
        },
        "required": [
          "type",
          "title",
          "config",
          "query_id",
          "client_id",
          "subtitle",
          "description",
          "status",
          "scope"
        ]
      },
      "VisualizationUpdateRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "counter",
              "table",
              "timeseries",
              "radial",
              "pie",
              "sankey"
            ]
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "config": {
            "type": "string",
            "nullable": true,
            "maxLength": 4294967295
          },
          "query_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "client_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 4294967295
          },
          "tag_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "hidden",
              "draft",
              "published"
            ]
          },
          "scope": {
            "type": "string",
            "enum": [
              "client",
              "research",
              "public"
            ]
          }
        },
        "required": [
          "status",
          "scope"
        ]
      },
      "BatchRequest": {
        "type": "object",
        "properties": {
          "batch_size": {
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 25
          }
        },
        "required": [
          "batch_size"
        ]
      },
      "MediaChannelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "enum": [
              "Podcast",
              "AnalystHours",
              "Conference"
            ]
          },
          "source_type": {
            "type": "string",
            "enum": [
              "Megaphone",
              "Manual",
              "Mux",
              "YouTube",
              "Vimeo"
            ]
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "website_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "feed_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "network": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "i_tunes_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "spotify_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "hidden": {
            "type": "boolean",
            "default": false
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "created_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "description": "Unix timestamp"
          }
        },
        "required": [
          "id",
          "slug",
          "type",
          "source_type",
          "source_id",
          "website_url",
          "image_url",
          "feed_url",
          "title",
          "subtitle",
          "description",
          "network",
          "i_tunes_id",
          "spotify_id",
          "hidden",
          "metadata",
          "created_at",
          "updated_at"
        ]
      },
      "MediaChannelPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaChannelResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "MediaChannelCreateRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Podcast",
              "AnalystHours",
              "Conference"
            ]
          },
          "source_type": {
            "type": "string",
            "enum": [
              "Megaphone",
              "Manual",
              "Mux",
              "YouTube",
              "Vimeo"
            ]
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "website_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "feed_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "network": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "i_tunes_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "spotify_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "hidden": {
            "type": "boolean",
            "default": false
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          }
        },
        "required": [
          "type",
          "source_type",
          "title",
          "slug",
          "source_id",
          "website_url",
          "image_url",
          "feed_url",
          "subtitle",
          "description",
          "network",
          "i_tunes_id",
          "spotify_id",
          "hidden",
          "metadata"
        ]
      },
      "MediaChannelUpdateRequest": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "website_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "feed_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "network": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "i_tunes_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "spotify_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "hidden": {
            "type": "boolean",
            "default": false
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          }
        },
        "required": [
          "slug",
          "website_url",
          "image_url",
          "feed_url",
          "title",
          "subtitle",
          "description",
          "network",
          "i_tunes_id",
          "spotify_id",
          "hidden",
          "metadata"
        ]
      },
      "MediaSpeakerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "strapi_slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "id",
          "name",
          "image_url",
          "description",
          "user_id",
          "strapi_slug"
        ]
      },
      "MediaFileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "channel_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "source_type": {
            "type": "string",
            "enum": [
              "Megaphone",
              "Manual",
              "Mux",
              "YouTube",
              "Vimeo"
            ]
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "required if sourceType is not manual",
            "maxLength": 255
          },
          "website_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "file_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "duration": {
            "type": "integer",
            "nullable": true,
            "default": 0,
            "minimum": 0,
            "maximum": 4294967295
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "summary": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "takeaways": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "transcript_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "spotify_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "youtube_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "published_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "created_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "speakers": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSpeakerResponse"
            }
          }
        },
        "required": [
          "id",
          "slug",
          "channel_id",
          "source_type",
          "source_id",
          "website_url",
          "image_url",
          "file_url",
          "duration",
          "title",
          "subtitle",
          "description",
          "summary",
          "takeaways",
          "notes",
          "transcript_url",
          "spotify_id",
          "youtube_id",
          "published_at",
          "created_at",
          "updated_at"
        ]
      },
      "MediaFilePageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaFileResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "MediaFileCreateRequest": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "source_type": {
            "type": "string",
            "enum": [
              "Megaphone",
              "Manual",
              "Mux",
              "YouTube",
              "Vimeo"
            ]
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "published_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "required if sourceType is not manual",
            "maxLength": 255
          },
          "website_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "file_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "duration": {
            "type": "integer",
            "nullable": true,
            "default": 0,
            "minimum": 0,
            "maximum": 4294967295
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "spotify_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "youtube_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "speaker_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          }
        },
        "required": [
          "channel_id",
          "source_type",
          "title",
          "published_at",
          "slug",
          "source_id",
          "website_url",
          "image_url",
          "file_url",
          "duration",
          "subtitle",
          "description",
          "spotify_id",
          "youtube_id",
          "speaker_ids"
        ]
      },
      "MediaFileUpdateRequest": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "channel_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "website_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "file_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "duration": {
            "type": "integer",
            "nullable": true,
            "default": 0,
            "minimum": 0,
            "maximum": 4294967295
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "spotify_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "youtube_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "published_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "speaker_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "maximum": 2147483647,
              "minimum": -2147483647
            }
          }
        },
        "required": [
          "slug",
          "channel_id",
          "website_url",
          "image_url",
          "file_url",
          "duration",
          "title",
          "subtitle",
          "description",
          "spotify_id",
          "youtube_id",
          "published_at",
          "speaker_ids"
        ]
      },
      "MediaSpeakerPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSpeakerResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "MediaSpeakerCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "strapi_slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "image_url",
          "description",
          "user_id",
          "strapi_slug"
        ]
      },
      "MediaSpeakerUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 255
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 4294967295
          },
          "strapi_slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "image_url",
          "description",
          "user_id",
          "strapi_slug"
        ]
      },
      "TranscriptBodyRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "maxLength": 255
          },
          "transcript_id": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "status",
          "transcript_id"
        ]
      },
      "ApiKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "user_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "client_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "role": {
            "type": "string",
            "enum": [
              "read",
              "superAdminRead",
              "superAdminManage"
            ]
          },
          "created_at": {
            "type": "number",
            "description": "Unix timestamp"
          }
        },
        "required": [
          "id",
          "user_id",
          "client_id",
          "name",
          "role",
          "created_at"
        ]
      },
      "ApiKeyPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKeyResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "ApiKeyCreateRequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "role": {
            "type": "string",
            "enum": [
              "read",
              "superAdminRead",
              "superAdminManage"
            ]
          }
        },
        "required": [
          "client_id",
          "name",
          "role"
        ]
      },
      "ApiKeyCreateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "user_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "client_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "role": {
            "type": "string",
            "enum": [
              "read",
              "superAdminRead",
              "superAdminManage"
            ]
          },
          "created_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "value": {
            "type": "string",
            "minLength": 32,
            "maxLength": 32
          }
        },
        "required": [
          "id",
          "user_id",
          "client_id",
          "name",
          "role",
          "created_at",
          "value"
        ]
      },
      "SubscriptionItemDataPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 255
          },
          "nickname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "product": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "id",
          "nickname",
          "product"
        ]
      },
      "SubscriptionItemData": {
        "type": "object",
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/SubscriptionItemDataPlan"
          }
        },
        "required": [
          "plan"
        ]
      },
      "SubscriptionItem": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemData"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 255
          },
          "seats": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "scheduled_seats": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "invoice_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "canceled",
              "past_due",
              "incomplete",
              "incomplete_expired",
              "paused",
              "trialing",
              "unpaid",
              "unsubscribed"
            ]
          },
          "current_period_start": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "current_period_end": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "items": {
            "$ref": "#/components/schemas/SubscriptionItem"
          }
        },
        "required": [
          "id",
          "seats",
          "scheduled_seats",
          "invoice_at",
          "status",
          "current_period_start",
          "current_period_end",
          "items"
        ]
      },
      "UsageResponse": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "nullable": false,
            "minimum": 0,
            "maximum": 4294967295
          },
          "limit": {
            "type": "integer",
            "nullable": false,
            "minimum": 0,
            "maximum": 4294967295
          },
          "reset_at": {
            "type": "number",
            "nullable": false,
            "description": "Unix timestamp"
          }
        },
        "required": [
          "current",
          "limit",
          "reset_at"
        ]
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "logo": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "banner": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "address": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "billing_email": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "onboarding_status": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 255
          },
          "subscription": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionResponse"
              }
            ]
          },
          "users": {
            "description": "Expandable relationship",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          },
          "usage": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageResponse"
              }
            ]
          }
        },
        "required": [
          "id",
          "logo",
          "banner",
          "slug",
          "name",
          "address",
          "billing_email",
          "onboarding_status"
        ]
      },
      "ClientCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "billing_email": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "billing_email"
        ]
      },
      "AssetPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetResponseBase"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "SubscriptionUpdateRequest": {
        "type": "object",
        "properties": {
          "seats": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        },
        "required": [
          "seats"
        ]
      },
      "GlossaryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "term": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "definition": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "status": {
            "type": "boolean",
            "nullable": true,
            "default": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "id",
          "term",
          "definition",
          "status",
          "slug"
        ]
      },
      "GlossaryPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlossaryResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "MarketStatsResponse": {
        "type": "object",
        "properties": {
          "total_usd_market_cap": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "total_usd_volume_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "altcoin_usd_market_cap": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "altcoin_usd_volume_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "stablecoin_usd_volume_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "stablecoin_usd_change_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "defi_usd_volume_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "defi_usd_change_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "btc_dominance": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "btc_dominance_change_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "eth_dominance": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "eth_dominance_change_24h": {
            "type": "number",
            "default": 0,
            "format": "double",
            "minimum": 2.2250738585072014e-308,
            "maximum": 1.7976931348623157e+308
          },
          "updated_at": {
            "type": "number",
            "default": 0,
            "description": "Unix timestamp"
          },
          "day": {
            "type": "string",
            "description": "Date in YYYY-MM-DD format",
            "maxLength": 255
          }
        },
        "required": [
          "total_usd_market_cap",
          "total_usd_volume_24h",
          "altcoin_usd_market_cap",
          "altcoin_usd_volume_24h",
          "stablecoin_usd_volume_24h",
          "stablecoin_usd_change_24h",
          "defi_usd_volume_24h",
          "defi_usd_change_24h",
          "btc_dominance",
          "btc_dominance_change_24h",
          "eth_dominance",
          "eth_dominance_change_24h",
          "updated_at",
          "day"
        ]
      },
      "MarketStatsPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketStatsResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "MetricResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 65535
          },
          "identifier": {
            "type": "string",
            "nullable": true,
            "example": "rev",
            "maxLength": 65535
          },
          "project": {
            "type": "string",
            "nullable": true,
            "example": "Bitcoin",
            "maxLength": 65535
          },
          "source": {
            "type": "string",
            "nullable": true,
            "example": "Blockworks",
            "maxLength": 65535
          },
          "data_type": {
            "type": "string",
            "nullable": true,
            "example": "float",
            "maxLength": 65535
          },
          "parameters": {
            "type": "object",
            "nullable": true,
            "example": {
              "end_date": {
                "type": "date",
                "required": false,
                "description": "End date (inclusive)"
              },
              "start_date": {
                "type": "date",
                "required": false,
                "description": "Start date (inclusive)"
              }
            }
          },
          "updated_at": {
            "type": "number",
            "nullable": true,
            "description": "Unix timestamp"
          },
          "interval": {
            "type": "string",
            "nullable": true,
            "example": "daily",
            "maxLength": 65535
          },
          "aggregation": {
            "type": "string",
            "nullable": true,
            "example": "SUM",
            "maxLength": 65535
          },
          "category": {
            "type": "string",
            "nullable": true,
            "example": "Financials",
            "maxLength": 65535
          }
        },
        "required": [
          "name",
          "description",
          "identifier",
          "project",
          "source",
          "data_type",
          "parameters",
          "updated_at",
          "interval",
          "aggregation",
          "category"
        ]
      },
      "MetricPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "MuxTokenResponse": {
        "type": "object",
        "properties": {
          "playback_id": {
            "type": "string",
            "maxLength": 255
          },
          "token": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "playback_id",
          "token"
        ]
      },
      "TransparencyRatingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "asset_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "project_team": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "token_allocation": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "market_structure": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "financial_disclosure": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "created_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "updated_at": {
            "type": "number",
            "description": "Unix timestamp"
          },
          "asset": {
            "description": "Expandable relationship",
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetResponseBase"
              }
            ]
          }
        },
        "required": [
          "id",
          "asset_id",
          "project_team",
          "token_allocation",
          "market_structure",
          "financial_disclosure",
          "created_at",
          "updated_at"
        ]
      },
      "TransparencyRatingPageResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2147483647
          },
          "total": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransparencyRatingResponse"
            }
          }
        },
        "required": [
          "page",
          "total",
          "data"
        ]
      },
      "TransparencyRatingCreateRequest": {
        "type": "object",
        "properties": {
          "asset_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "project_team": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "token_allocation": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "market_structure": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "financial_disclosure": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "file_url": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "asset_id",
          "project_team",
          "token_allocation",
          "market_structure",
          "financial_disclosure",
          "file_url"
        ]
      },
      "TransparencyRatingUpdateRequest": {
        "type": "object",
        "properties": {
          "project_team": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "token_allocation": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "market_structure": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "financial_disclosure": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "file_url": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "FileUploadBody": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "file"
        ]
      },
      "VisualizationScreenshotMetadataResponse": {
        "type": "object",
        "properties": {
          "dashboard_id": {
            "type": "string",
            "maxLength": 10
          },
          "visualization_id": {
            "type": "string",
            "maxLength": 10
          },
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "dashboard_slug": {
            "type": "string",
            "maxLength": 255
          },
          "visualization_slug": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "dashboard_id",
          "visualization_id",
          "title",
          "dashboard_slug",
          "visualization_slug"
        ]
      },
      "VisualizationScreenshotUploadResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "path": {
            "type": "string",
            "maxLength": 255
          },
          "mime_type": {
            "type": "string",
            "enum": [
              "image/png"
            ]
          },
          "metadata": {
            "$ref": "#/components/schemas/VisualizationScreenshotMetadataResponse"
          }
        },
        "required": [
          "name",
          "path",
          "mime_type",
          "metadata"
        ]
      }
    }
  },
  "security": [
    {
      "x-api-key": []
    }
  ]
}